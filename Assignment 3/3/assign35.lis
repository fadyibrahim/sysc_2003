                        .module assign35.c
                        .area text
 0000                   .dbfile M:\SYSC20~1\ASSIGN~2\assign35.c
 0000                   .dbfunc e main _main fI
 0000           ;    keysPressed -> -8,x
 0000           ;      proximity -> -6,x
 0000           ;    temperature -> -4,x
 0000           ;          speed -> -3,x
 0000           ;     boolResult -> -2,x
 0000           _main::
 0000 34                pshx
 0001 B775              tfr s,x
 0003 1B92              leas -14,sp
 0005                   .dbline -1
 0005                   .dbline 7
 0005           ; #include <stdio.h>
 0005           ; void printInBinaryByte(char ByteValue);
 0005           ; void printInBinaryWord(unsigned int hexValue);
 0005           ; int displaySystemStatus(char speed, char temperature, unsigned int proximity, unsigned int *keysPressed);
 0005           ; 
 0005           ;  int main(void)
 0005           ; {
 0005                   .dbline 8
 0005           ; char speed= 0x34;
 0005 C634              ldab #52
 0007 6B1D              stab -3,x
 0009                   .dbline 9
 0009           ; char temperature=0x30;
 0009 C630              ldab #48
 000B 6B1C              stab -4,x
 000D                   .dbline 10
 000D           ; unsigned int proximity=0x8890;
 000D CC8890            ldd #0x8890
 0010 6C1A              std -6,x
 0012                   .dbline 11
 0012           ; unsigned int keysPressed=1234;
 0012 CC04D2            ldd #1234
 0015 6C18              std -8,x
 0017                   .dbline 12
 0017           ; int boolResult=0;
 0017 CC0000            ldd #0
 001A 6C1E              std -2,x
 001C                   .dbline 13
 001C           ; boolResult=displaySystemStatus(speed,temperature,proximity,&keysPressed);
 001C 1918              leay -8,x
 001E 6D84              sty 4,sp
 0020 18021A82          movw -6,x,2,sp
 0024 E61C              ldab -4,x
 0026 87                clra
 0027 6C80              std 0,sp
 0029 E61D              ldab -3,x
 002B 87                clra
 002C 160046            jsr _displaySystemStatus
 002F 6C1E              std -2,x
 0031                   .dbline 14
 0031           ; printf("\n");
 0031 CC02D7            ldd #L2
 0034 160000            jsr _printf
 0037                   .dbline 15
 0037           ; printf("%i\n",boolResult);
 0037 18021E80          movw -2,x,0,sp
 003B CC02D3            ldd #L3
 003E 160000            jsr _printf
 0041                   .dbline 16
 0041           ; asm("SWI");
 0041 3F                        SWI
 0042           
 0042                   .dbline -2
 0042                   .dbline 17
 0042           ; }
 0042           L1:
 0042 B757              tfr x,s
 0044 30                pulx
 0045                   .dbline 0 ; func end
 0045 3D                rts
 0046                   .dbsym l keysPressed -8 i
 0046                   .dbsym l proximity -6 i
 0046                   .dbsym l temperature -4 c
 0046                   .dbsym l speed -3 c
 0046                   .dbsym l boolResult -2 I
 0046                   .dbend
 0046                   .dbfunc e displaySystemStatus _displaySystemStatus fI
 0046           ;   objectDetect -> -4,x
 0046           ;      direction -> -2,x
 0046           ;    keysPressed -> 10,x
 0046           ;      proximity -> 8,x
 0046           ;    temperature -> 7,x
 0046           ;          speed -> 3,x
 0046           _displaySystemStatus::
 0046 3B                pshd
 0047 34                pshx
 0048 B775              tfr s,x
 004A 1B9C              leas -4,sp
 004C                   .dbline -1
 004C                   .dbline 21
 004C           ; 
 004C           ; 
 004C           ; int displaySystemStatus(char speed, char temperature, unsigned int proximity, unsigned int *keysPressed)
 004C           ; {
 004C                   .dbline 24
 004C           ; unsigned int direction;
 004C           ; unsigned int objectDetect;
 004C           ; printf("Speed:  ");
 004C CC02CA            ldd #L5
 004F 160000            jsr _printf
 0052                   .dbline 25
 0052           ; printInBinaryByte(speed);
 0052 E603              ldab 3,x
 0054 87                clra
 0055 16018E            jsr _printInBinaryByte
 0058                   .dbline 26
 0058           ; printf("\n");
 0058 CC02D7            ldd #L2
 005B 160000            jsr _printf
 005E                   .dbline 27
 005E           ; printf("Temperature:  ");
 005E CC02BB            ldd #L6
 0061 160000            jsr _printf
 0064                   .dbline 28
 0064           ; printInBinaryByte(temperature);
 0064 E607              ldab 7,x
 0066 87                clra
 0067 16018E            jsr _printInBinaryByte
 006A                   .dbline 29
 006A           ; printf("\n");
 006A CC02D7            ldd #L2
 006D 160000            jsr _printf
 0070                   .dbline 30
 0070           ; direction=proximity;
 0070 1802081E          movw 8,x,-2,x
 0074                   .dbline 31
 0074           ; objectDetect=proximity;
 0074 1802081C          movw 8,x,-4,x
 0078                   .dbline 32
 0078           ; objectDetect=objectDetect>>15;
 0078 EC1C              ldd -4,x
 007A CD000F            ldy #15
 007D 8D0000            cpy #0
 0080 2704              beq X0
 0082           X1:
 0082 49                lsrd
 0083 0436FC            dbne y,X1
 0086           X0:
 0086 6C1C              std -4,x
 0088                   .dbline 33
 0088           ; if (objectDetect==1)
 0088 EC1C              ldd -4,x
 008A 8C0001            cpd #1
 008D 2608              bne L7
 008F                   .dbline 34
 008F           ;       {
 008F                   .dbline 35
 008F           ;               printf("Object detected!\n");
 008F CC02A9            ldd #L9
 0092 160000            jsr _printf
 0095                   .dbline 36
 0095           ;       }
 0095 2006              bra L8
 0097           L7:
 0097                   .dbline 38
 0097           ; else
 0097           ;       {
 0097                   .dbline 39
 0097           ;       printf(" Noo bject detected!\n");
 0097 CC0293            ldd #L10
 009A 160000            jsr _printf
 009D                   .dbline 40
 009D           ;       }
 009D           L8:
 009D                   .dbline 41
 009D           ; direction=direction &0x0007;
 009D 0D1FF8            bclr -1,x,#0xf8
 00A0 0D1EFF            bclr -2,x,#0xff
 00A3                   .dbline 42
 00A3           ; if (direction==0)
 00A3 EC1E              ldd -2,x
 00A5 2608              bne L11
 00A7                   .dbline 43
 00A7           ; {
 00A7                   .dbline 44
 00A7           ;       printf("Direction North!");
 00A7 CC0282            ldd #L13
 00AA 160000            jsr _printf
 00AD                   .dbline 45
 00AD           ;       }
 00AD 2067              bra L12
 00AF           L11:
 00AF                   .dbline 46
 00AF           ; else if (direction==1)
 00AF EC1E              ldd -2,x
 00B1 8C0001            cpd #1
 00B4 2608              bne L14
 00B6                   .dbline 47
 00B6           ; {
 00B6                   .dbline 48
 00B6           ;       printf("Direction South!");
 00B6 CC0271            ldd #L16
 00B9 160000            jsr _printf
 00BC                   .dbline 49
 00BC           ;       }
 00BC 2058              bra L15
 00BE           L14:
 00BE                   .dbline 50
 00BE           ; else if(direction==2)
 00BE EC1E              ldd -2,x
 00C0 8C0002            cpd #2
 00C3 2608              bne L17
 00C5                   .dbline 51
 00C5           ;       {
 00C5                   .dbline 52
 00C5           ;       printf("Direction East!");
 00C5 CC0261            ldd #L19
 00C8 160000            jsr _printf
 00CB                   .dbline 53
 00CB           ;       }
 00CB 2049              bra L18
 00CD           L17:
 00CD                   .dbline 54
 00CD           ; else if(direction==3)
 00CD EC1E              ldd -2,x
 00CF 8C0003            cpd #3
 00D2 2608              bne L20
 00D4                   .dbline 55
 00D4           ;       {
 00D4                   .dbline 56
 00D4           ;       printf("Direction West!");
 00D4 CC0251            ldd #L22
 00D7 160000            jsr _printf
 00DA                   .dbline 57
 00DA           ;       }
 00DA 203A              bra L21
 00DC           L20:
 00DC                   .dbline 58
 00DC           ; else if(direction==4)
 00DC EC1E              ldd -2,x
 00DE 8C0004            cpd #4
 00E1 2608              bne L23
 00E3                   .dbline 59
 00E3           ;       {
 00E3                   .dbline 60
 00E3           ;       printf("Direction NorthEast!");
 00E3 CC023C            ldd #L25
 00E6 160000            jsr _printf
 00E9                   .dbline 61
 00E9           ;       }
 00E9 202B              bra L24
 00EB           L23:
 00EB                   .dbline 62
 00EB           ; else if(direction==5)
 00EB EC1E              ldd -2,x
 00ED 8C0005            cpd #5
 00F0 2608              bne L26
 00F2                   .dbline 63
 00F2           ;       {
 00F2                   .dbline 64
 00F2           ;       printf("Direction NorthWest!");
 00F2 CC0227            ldd #L28
 00F5 160000            jsr _printf
 00F8                   .dbline 65
 00F8           ;       }
 00F8 201C              bra L27
 00FA           L26:
 00FA                   .dbline 66
 00FA           ; else if(direction==6)
 00FA EC1E              ldd -2,x
 00FC 8C0006            cpd #6
 00FF 2608              bne L29
 0101                   .dbline 67
 0101           ;       {
 0101                   .dbline 68
 0101           ;       printf("Direction SouthEast!");
 0101 CC0212            ldd #L31
 0104 160000            jsr _printf
 0107                   .dbline 69
 0107           ;       }
 0107 200D              bra L30
 0109           L29:
 0109                   .dbline 70
 0109           ; else if(direction==7)
 0109 EC1E              ldd -2,x
 010B 8C0007            cpd #7
 010E 2606              bne L32
 0110                   .dbline 71
 0110           ;       {
 0110                   .dbline 72
 0110           ;       printf("Direction SouthWest!");
 0110 CC01FD            ldd #L34
 0113 160000            jsr _printf
 0116                   .dbline 73
 0116           ;       }
 0116           L32:
 0116           L30:
 0116           L27:
 0116           L24:
 0116           L21:
 0116           L18:
 0116           L15:
 0116           L12:
 0116                   .dbline 74
 0116           ; printf("\n");
 0116 CC02D7            ldd #L2
 0119 160000            jsr _printf
 011C                   .dbline 75
 011C           ; printf("keysPressed: ");
 011C CC01EF            ldd #L35
 011F 160000            jsr _printf
 0122                   .dbline 76
 0122           ; printInBinaryWord(*keysPressed);
 0122 ECE3000A          ldd [10,x]
 0126 160132            jsr _printInBinaryWord
 0129                   .dbline 77
 0129           ; return 1;
 0129 CC0001            ldd #1
 012C                   .dbline -2
 012C           L4:
 012C B757              tfr x,s
 012E 30                pulx
 012F 1B82              leas 2,sp
 0131                   .dbline 0 ; func end
 0131 3D                rts
 0132                   .dbsym l objectDetect -4 i
 0132                   .dbsym l direction -2 i
 0132                   .dbsym l keysPressed 10 pi
 0132                   .dbsym l proximity 8 i
 0132                   .dbsym l temperature 6 I
 0132                   .dbsym l temperature 7 c
 0132                   .dbsym l speed 2 I
 0132                   .dbsym l speed 3 c
 0132                   .dbend
 0132                   .dbfunc e printInBinaryWord _printInBinaryWord fV
 0132           ;       constant -> -8,x
 0132           ;           loop -> -6,x
 0132           ;           temp -> -4,x
 0132           ;     andCounter -> -2,x
 0132           ;       hexValue -> 2,x
 0132           _printInBinaryWord::
 0132 3B                pshd
 0133 34                pshx
 0134 B775              tfr s,x
 0136 1B98              leas -8,sp
 0138                   .dbline -1
 0138                   .dbline 81
 0138           ; 
 0138           ; }
 0138           ; void printInBinaryWord(unsigned int hexValue)
 0138           ; {     
 0138                   .dbline 83
 0138           ; 
 0138           ;       int andCounter=32768;
 0138 CC8000            ldd #0x8000
 013B 6C1E              std -2,x
 013D                   .dbline 84
 013D           ;       int constant=hexValue;
 013D EC02              ldd 2,x
 013F 6C18              std -8,x
 0141                   .dbline 85
 0141           ;       int temp=0;
 0141 CC0000            ldd #0
 0144 6C1C              std -4,x
 0146                   .dbline 86
 0146           ;       int loop=0;
 0146 CC0000            ldd #0
 0149 6C1A              std -6,x
 014B 2034              bra L38
 014D           L37:
 014D                   .dbline 88
 014D           ;       while (loop!=16)
 014D           ;       {
 014D                   .dbline 89
 014D           ;               temp=constant;
 014D 1802181C          movw -8,x,-4,x
 0151                   .dbline 90
 0151           ;               temp=temp & andCounter;
 0151 EC1C              ldd -4,x
 0153 A41E              anda -2,x
 0155 E41F              andb -1,x
 0157 6C1C              std -4,x
 0159                   .dbline 91
 0159           ;               if(temp==andCounter)
 0159 EC1C              ldd -4,x
 015B AC1E              cpd -2,x
 015D 2608              bne L40
 015F                   .dbline 92
 015F           ;               {
 015F                   .dbline 93
 015F           ;                       printf("1");
 015F CC01ED            ldd #L42
 0162 160000            jsr _printf
 0165                   .dbline 94
 0165           ;               }
 0165 2006              bra L41
 0167           L40:
 0167                   .dbline 96
 0167           ;               else
 0167           ;               {
 0167                   .dbline 97
 0167           ;                       printf("0");
 0167 CC01EB            ldd #L43
 016A 160000            jsr _printf
 016D                   .dbline 98
 016D           ;                       }
 016D           L41:
 016D                   .dbline 99
 016D EC1A              ldd -6,x
 016F C30001            addd #1
 0172 6C1A              std -6,x
 0174                   .dbline 100
 0174 EC1E              ldd -2,x
 0176 CD0002            ldy #2
 0179 B7D6              exg x,y
 017B 1815              idivs
 017D B7D6              exg x,y
 017F 6D1E              sty -2,x
 0181                   .dbline 101
 0181           L38:
 0181                   .dbline 87
 0181 EC1A              ldd -6,x
 0183 8C0010            cpd #16
 0186 26C5              bne L37
 0188                   .dbline -2
 0188                   .dbline 103
 0188           ;               loop++;
 0188           ;               andCounter=andCounter/2;
 0188           ;       }
 0188           ; 
 0188           ; }
 0188           L36:
 0188 B757              tfr x,s
 018A 30                pulx
 018B 1B82              leas 2,sp
 018D                   .dbline 0 ; func end
 018D 3D                rts
 018E                   .dbsym l constant -8 I
 018E                   .dbsym l loop -6 I
 018E                   .dbsym l temp -4 I
 018E                   .dbsym l andCounter -2 I
 018E                   .dbsym l hexValue 2 i
 018E                   .dbend
 018E                   .dbfunc e printInBinaryByte _printInBinaryByte fV
 018E           ;       constant -> -8,x
 018E           ;           loop -> -6,x
 018E           ;           temp -> -4,x
 018E           ;     andCounter -> -2,x
 018E           ;      ByteValue -> 3,x
 018E           _printInBinaryByte::
 018E 3B                pshd
 018F 34                pshx
 0190 B775              tfr s,x
 0192 1B98              leas -8,sp
 0194                   .dbline -1
 0194                   .dbline 105
 0194           ; void printInBinaryByte(char ByteValue)
 0194           ; {     
 0194                   .dbline 107
 0194           ; 
 0194           ;       int andCounter=128;
 0194 CC0080            ldd #128
 0197 6C1E              std -2,x
 0199                   .dbline 108
 0199           ;       int constant=ByteValue;
 0199 E603              ldab 3,x
 019B 87                clra
 019C 6C18              std -8,x
 019E                   .dbline 109
 019E           ;       int temp=0;
 019E CC0000            ldd #0
 01A1 6C1C              std -4,x
 01A3                   .dbline 110
 01A3           ;       int loop=0;
 01A3 CC0000            ldd #0
 01A6 6C1A              std -6,x
 01A8 2034              bra L46
 01AA           L45:
 01AA                   .dbline 112
 01AA           ;       while (loop!=8)
 01AA           ;       {
 01AA                   .dbline 113
 01AA           ;               temp=constant;
 01AA 1802181C          movw -8,x,-4,x
 01AE                   .dbline 114
 01AE           ;               temp=temp & andCounter;
 01AE EC1C              ldd -4,x
 01B0 A41E              anda -2,x
 01B2 E41F              andb -1,x
 01B4 6C1C              std -4,x
 01B6                   .dbline 115
 01B6           ;               if(temp==andCounter)
 01B6 EC1C              ldd -4,x
 01B8 AC1E              cpd -2,x
 01BA 2608              bne L48
 01BC                   .dbline 116
 01BC           ;               {
 01BC                   .dbline 117
 01BC           ;                       printf("1");
 01BC CC01ED            ldd #L42
 01BF 160000            jsr _printf
 01C2                   .dbline 118
 01C2           ;               }
 01C2 2006              bra L49
 01C4           L48:
 01C4                   .dbline 120
 01C4           ;               else
 01C4           ;               {
 01C4                   .dbline 121
 01C4           ;                       printf("0");
 01C4 CC01EB            ldd #L43
 01C7 160000            jsr _printf
 01CA                   .dbline 122
 01CA           ;                       }
 01CA           L49:
 01CA                   .dbline 123
 01CA EC1A              ldd -6,x
 01CC C30001            addd #1
 01CF 6C1A              std -6,x
 01D1                   .dbline 124
 01D1 EC1E              ldd -2,x
 01D3 CD0002            ldy #2
 01D6 B7D6              exg x,y
 01D8 1815              idivs
 01DA B7D6              exg x,y
 01DC 6D1E              sty -2,x
 01DE                   .dbline 125
 01DE           L46:
 01DE                   .dbline 111
 01DE EC1A              ldd -6,x
 01E0 8C0008            cpd #8
 01E3 26C5              bne L45
 01E5                   .dbline -2
 01E5                   .dbline 127
 01E5           ;               loop++;
 01E5           ;               andCounter=andCounter/2;
 01E5           ;       }
 01E5           ; 
 01E5           ; }
 01E5           L44:
 01E5 B757              tfr x,s
 01E7 30                pulx
 01E8 1B82              leas 2,sp
 01EA                   .dbline 0 ; func end
 01EA 3D                rts
 01EB                   .dbsym l constant -8 I
 01EB                   .dbsym l loop -6 I
 01EB                   .dbsym l temp -4 I
 01EB                   .dbsym l andCounter -2 I
 01EB                   .dbsym l ByteValue 2 I
 01EB                   .dbsym l ByteValue 3 c
 01EB                   .dbend
 01EB           L43:
 01EB 3000              .byte 48,0
 01ED           L42:
 01ED 3100              .byte 49,0
 01EF           L35:
 01EF 6B657973507265737365643A2000      .byte 'k,'e,'y,'s,'P,'r,'e,'s,'s,'e,'d,58,32,0
 01FD           L34:
 01FD 446972656374696F6E20536F75746857  .byte 'D,'i,'r,'e,'c,'t,'i,'o,'n,32,'S,'o,'u,'t,'h,'W
 020D 6573742100        .byte 'e,'s,'t,33,0
 0212           L31:
 0212 446972656374696F6E20536F75746845  .byte 'D,'i,'r,'e,'c,'t,'i,'o,'n,32,'S,'o,'u,'t,'h,'E
 0222 6173742100        .byte 'a,'s,'t,33,0
 0227           L28:
 0227 446972656374696F6E204E6F72746857  .byte 'D,'i,'r,'e,'c,'t,'i,'o,'n,32,'N,'o,'r,'t,'h,'W
 0237 6573742100        .byte 'e,'s,'t,33,0
 023C           L25:
 023C 446972656374696F6E204E6F72746845  .byte 'D,'i,'r,'e,'c,'t,'i,'o,'n,32,'N,'o,'r,'t,'h,'E
 024C 6173742100        .byte 'a,'s,'t,33,0
 0251           L22:
 0251 446972656374696F6E20576573742100  .byte 'D,'i,'r,'e,'c,'t,'i,'o,'n,32,'W,'e,'s,'t,33,0
 0261           L19:
 0261 446972656374696F6E20456173742100  .byte 'D,'i,'r,'e,'c,'t,'i,'o,'n,32,'E,'a,'s,'t,33,0
 0271           L16:
 0271 446972656374696F6E20536F75746821  .byte 'D,'i,'r,'e,'c,'t,'i,'o,'n,32,'S,'o,'u,'t,'h,33
 0281 00                .byte 0
 0282           L13:
 0282 446972656374696F6E204E6F72746821  .byte 'D,'i,'r,'e,'c,'t,'i,'o,'n,32,'N,'o,'r,'t,'h,33
 0292 00                .byte 0
 0293           L10:
 0293 204E6F6F20626A656374206465746563  .byte 32,'N,'o,'o,32,'b,'j,'e,'c,'t,32,'d,'e,'t,'e,'c
 02A3 746564210A00      .byte 't,'e,'d,33,10,0
 02A9           L9:
 02A9 4F626A65637420646574656374656421  .byte 'O,'b,'j,'e,'c,'t,32,'d,'e,'t,'e,'c,'t,'e,'d,33
 02B9 0A00              .byte 10,0
 02BB           L6:
 02BB 54656D70657261747572653A202000    .byte 'T,'e,'m,'p,'e,'r,'a,'t,'u,'r,'e,58,32,32,0
 02CA           L5:
 02CA 53706565643A202000        .byte 'S,'p,'e,'e,'d,58,32,32,0
 02D3           L3:
 02D3 25690A00          .byte 37,'i,10,0
 02D7           L2:
 02D7 0A00              .byte 10,0
