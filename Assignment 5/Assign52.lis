                        .module Assign52.c
                        .area memory(abs)
                        .org 0x3f8c
 3F8C           _interrupt_vectors::
 3F8C F8CF              .word 63695
 3F8E F8CF              .word 63695
 3F90 F8CF              .word 63695
 3F92 F8CF              .word 63695
 3F94 F8CF              .word 63695
 3F96 F8CF              .word 63695
 3F98 F8CF              .word 63695
 3F9A F8CF              .word 63695
 3F9C F8CF              .word 63695
 3F9E F8CF              .word 63695
 3FA0 F8CF              .word 63695
 3FA2 F8CF              .word 63695
 3FA4 F8CF              .word 63695
 3FA6 F8CF              .word 63695
 3FA8 F8CF              .word 63695
 3FAA F8CF              .word 63695
 3FAC F8CF              .word 63695
 3FAE F8CF              .word 63695
 3FB0 F8CF              .word 63695
 3FB2 F8CF              .word 63695
 3FB4 F8CF              .word 63695
 3FB6 F8CF              .word 63695
 3FB8 F8CF              .word 63695
 3FBA F8CF              .word 63695
 3FBC F8CF              .word 63695
 3FBE F8CF              .word 63695
 3FC0 F8CF              .word 63695
 3FC2 F8CF              .word 63695
 3FC4 F8CF              .word 63695
 3FC6 F8CF              .word 63695
 3FC8 F8CF              .word 63695
 3FCA F8CF              .word 63695
 3FCC 0086              .word _printKeysPressed
 3FCE F8CF              .word 63695
 3FD0 F8CF              .word 63695
 3FD2 F8CF              .word 63695
 3FD4 F8CF              .word 63695
 3FD6 F8CF              .word 63695
 3FD8 F8CF              .word 63695
 3FDA 042C              .word _pacA_isr
 3FDC F8CF              .word 63695
 3FDE F8CF              .word 63695
 3FE0 F8CF              .word 63695
 3FE2 F8CF              .word 63695
 3FE4 F8CF              .word 63695
 3FE6 F8CF              .word 63695
 3FE8 F8CF              .word 63695
 3FEA F8CF              .word 63695
 3FEC F8CF              .word 63695
 3FEE F8CF              .word 63695
 3FF0 03F2              .word _CollisionDetect
 3FF2 F8CF              .word 63695
 3FF4 F8C7              .word 63687
 3FF6 F8C3              .word 63683
 3FF8 F8CB              .word 63691
 3FFA F805              .word 63493
 3FFC F809              .word 63497
 3FFE 0000              .word __start
 4000                   .dbfile M:\Assign51/vectors_dps256_NoICE.c
 4000                   .dbsym e interrupt_vectors _interrupt_vectors A[116:58]pfV
                        .area data
 0000                   .dbfile M:\Assign51/vectors_dps256_NoICE.c
 0000           _changingSpeed::
 0000                   .blkb 2
                        .area idata
 0000 0009              .word 9
                        .area data
 0002                   .dbfile M:\Assign51/vectors_dps256_NoICE.c
 0002                   .dbfile M:\Assign51\Assign52.c
 0002                   .dbsym e changingSpeed _changingSpeed I
 0002           _changingTemp::
 0002                   .blkb 2
                        .area idata
 0002 0019              .word 25
                        .area data
 0004                   .dbfile M:\Assign51\Assign52.c
 0004                   .dbsym e changingTemp _changingTemp I
 0004           _counterInterrupt::
 0004                   .blkb 2
                        .area idata
 0004 0001              .word 1
                        .area data
 0006                   .dbfile M:\Assign51\Assign52.c
 0006                   .dbsym e counterInterrupt _counterInterrupt I
 0006           _optCount::
 0006                   .blkb 2
                        .area idata
 0006 0000              .word 0
                        .area data
 0008                   .dbfile M:\Assign51\Assign52.c
 0008                   .dbsym e optCount _optCount I
                        .area text
 0000                   .dbfile M:\Assign51\Assign52.c
 0000                   .dbfunc e main _main fV
 0000           ;          ?temp -> -2,x
 0000           _main::
 0000 34                pshx
 0001 B775              tfr s,x
 0003 1B9C              leas -4,sp
 0005                   .dbline -1
 0005                   .dbline 19
 0005           ; /*
 0005           ; Authors Gavez Smith 100857991, Fady Ibrahim 100876906
 0005           ; */
 0005           ; #include "hcs12dp256.h"
 0005           ; #include"stdio.h"
 0005           ; #include "vectors_dps256_NoICE.c"
 0005           ; 
 0005           ; void CollisionDetect(void);
 0005           ; void Inc_Dec_Speed(int speed, int temp );
 0005           ; void displaySpeed_Temp(int speed, int temp);
 0005           ; int changingSpeed=9;
 0005           ; int changingTemp=25;
 0005           ; int counterInterrupt=1;
 0005           ; int optCount = 0;
 0005           ; int duty, i;
 0005           ; #pragma interrupt_handler printKeysPressed()
 0005           ; #pragma interrupt_handler CollisionDetect()
 0005           ; #pragma interrupt_handler pacA_isr()
 0005           ; void main(){
 0005                   .dbline 22
 0005           ;        
 0005           ;        
 0005           ;        Lcd2PP_Init();
 0005 160000            jsr _Lcd2PP_Init
 0008                   .dbline 23
 0008           ;        displaySpeed_Temp(++changingSpeed, changingTemp);
 0008 1801800002        movw _changingTemp,0,sp
 000D FC0000            ldd _changingSpeed
 0010 C30001            addd #1
 0013 6C1E              std -2,x
 0015 18051E0000        movw -2,x,_changingSpeed
 001A EC1E              ldd -2,x
 001C 16025C            jsr _displaySpeed_Temp
 001F                   .dbline 24
 001F           ;        DDRP |= 0x0F; // bitset PP0-3 as outputs (rows) 
 001F 1C025A0F          bset 0x25a,#15
 0023                   .dbline 25
 0023           ;        DDRH &= 0x0F; // bitclear PH4..7 as inputs (columns)
 0023 1D0262F0          bclr 0x262,#0xf0
 0027                   .dbline 26
 0027           ;        PTP = 0x0F; // Set scan row(s)
 0027 C60F              ldab #15
 0029 7B0258            stab 0x258
 002C                   .dbline 27
 002C           ;        PIFH = 0xFF; // Clear previous interrupt flags
 002C C6FF              ldab #255
 002E 7B0267            stab 0x267
 0031                   .dbline 28
 0031           ;        PPSH = 0xF0; // Rising Edge
 0031 C6F0              ldab #240
 0033 7B0265            stab 0x265
 0036                   .dbline 29
 0036           ;        PERH = 0x00; // Disable pulldowns
 0036 790264            clr 0x264
 0039                   .dbline 30
 0039           ;        PIEH |= 0xF0; // Local enable on columns inputs
 0039 1C0266F0          bset 0x266,#240
 003D                   .dbline 34
 003D           ;        // enable the latch.
 003D           ;        //PTM |= 0x08;
 003D           ;        //
 003D           ;        duty = 20; 
 003D CC0014            ldd #20
 0040 7C0002            std _duty
 0043                   .dbline 35
 0043           ;        PWMDTY7 = duty;
 0043 FC0002            ldd _duty
 0046 7B00C3            stab 0xc3
 0049                   .dbline 37
 0049           ;       
 0049           ;      PWMPOL = 0xFF; // Initial Polarity is high
 0049 C6FF              ldab #255
 004B 7B00A1            stab 0xa1
 004E                   .dbline 38
 004E           ;      PWMCLK &= 0x7F; //Select Clock B for channel 7
 004E 1D00A280          bclr 0xa2,#0x80
 0052                   .dbline 39
 0052           ;      PWMPRCLK = 0x70; //Prescale ClockB : busclock/128
 0052 C670              ldab #112
 0054 7B00A3            stab 0xa3
 0057                   .dbline 40
 0057           ;      PWMCAE &= 0x7F; //Channel 7 : left aligned
 0057 1D00A480          bclr 0xa4,#0x80
 005B                   .dbline 41
 005B           ;      PWMCTL &= 0xF3; //PWM in Wait and Freeze Modes
 005B 1D00A50C          bclr 0xa5,#0xc
 005F                   .dbline 42
 005F           ;      PWMPER7 = 100; //Set period for PWM7
 005F C664              ldab #100
 0061 7B00BB            stab 0xbb
 0064                   .dbline 43
 0064           ;      PWME = 0x80; //Enable PWM Channel 7
 0064 C680              ldab #128
 0066 7B00A0            stab 0xa0
 0069                   .dbline 44
 0069           ;      DDRP |= 0x40; //For Motor Direction Control 
 0069 1C025A40          bset 0x25a,#64
 006D                   .dbline 45
 006D           ;      PAFLG |= 1; //Clear out the interrupt flag
 006D 1C006101          bset 0x61,#1
 0071                   .dbline 46
 0071           ;      PACTL = 0x51; //Enable PACA for Optical Sensor
 0071 C651              ldab #81
 0073 7B0060            stab 0x60
 0076                   .dbline 48
 0076           ;        
 0076           ;        CRGINT |= 0x80; //Enables timer interrupts
 0076 1C003880          bset 0x38,#128
 007A                   .dbline 49
 007A           ;        RTICTL |= 0x72; //Sets the prescale factor
 007A 1C003B72          bset 0x3b,#114
 007E                   .dbline 50
 007E           ;        asm("cli");
 007E 10EF                      cli
 0080           
 0080           L4:
 0080                   .dbline 52
 0080                   .dbline 52
 0080           L5:
 0080                   .dbline 52
 0080 20FE              bra L4
 0082           X0:
 0082                   .dbline 52
 0082           ;        
 0082           ;        while(1){};
 0082                   .dbline -2
 0082                   .dbline 54
 0082           ;        
 0082           ; }
 0082           L3:
 0082 B757              tfr x,s
 0084 30                pulx
 0085                   .dbline 0 ; func end
 0085 3D                rts
 0086                   .dbend
 0086                   .dbfunc e printKeysPressed _printKeysPressed fV
 0086           ;          ?temp -> -8,x
 0086           ;          ?temp -> -8,x
 0086           ;          ?temp -> -6,x
 0086           ;          count -> -4,x
 0086           ;              i -> -2,x
 0086           _printKeysPressed::
 0086 34                pshx
 0087 B775              tfr s,x
 0089 1B96              leas -10,sp
 008B                   .dbline -1
 008B                   .dbline 60
 008B           ; 
 008B           ; /*
 008B           ; printKeysPressed gets the character pressed on the keyboard by through the keyboard ISR and then it prints out the value on the terminal.
 008B           ; 
 008B           ; */
 008B           ; void printKeysPressed(){   
 008B                   .dbline 62
 008B           ;       int i, count;
 008B           ;       asm("sei");
 008B 1410                      sei
 008D           
 008D                   .dbline 64
 008D           ; 
 008D           ;       for (count=1; count<=0x08; count<<=1)
 008D CC0001            ldd #1
 0090 6C1C              std -4,x
 0092           L8:
 0092                   .dbline 65
 0092           ;       {
 0092                   .dbline 66
 0092           ;               PTH&=0x0F;
 0092 1D0260F0          bclr 0x260,#0xf0
 0096                   .dbline 67
 0096           ;               PTP = (PTP&0xF0) | count;
 0096                   ; vol
 0096 F60258            ldab 0x258
 0099 87                clra
 009A 8400              anda #0
 009C C4F0              andb #240
 009E AA1C              ora -4,x
 00A0 EA1D              orb -3,x
 00A2 7B0258            stab 0x258
 00A5                   .dbline 69
 00A5 CC0000            ldd #0
 00A8 6C1E              std -2,x
 00AA           L12:
 00AA                   .dbline 69
 00AA           L13:
 00AA                   .dbline 69
 00AA           ;               
 00AA           ;               for (i=0;i<1000;i++);
 00AA EC1E              ldd -2,x
 00AC C30001            addd #1
 00AF 6C1E              std -2,x
 00B1                   .dbline 69
 00B1 EC1E              ldd -2,x
 00B3 8C03E8            cpd #1000
 00B6 2DF2              blt L12
 00B8                   .dbline 70
 00B8           ;               switch(PTH & 0xF0){
 00B8                   ; vol
 00B8 F60260            ldab 0x260
 00BB 87                clra
 00BC 8400              anda #0
 00BE C4F0              andb #240
 00C0 6C1A              std -6,x
 00C2 8C0020            cpd #32
 00C5 18270099          lbeq L32
 00C9 EC1A              ldd -6,x
 00CB 8C0020            cpd #32
 00CE 2E0B              bgt L74
 00D0           L73:
 00D0 EC1A              ldd -6,x
 00D2 8C0010            cpd #16
 00D5 2723              beq L19
 00D7 18200162          lbra L16
 00DB           L74:
 00DB EC1A              ldd -6,x
 00DD 8C0040            cpd #64
 00E0 182700C4          lbeq L45
 00E4 EC1A              ldd -6,x
 00E6 8C0040            cpd #64
 00E9 182D0150          lblt L16
 00ED           L75:
 00ED EC1A              ldd -6,x
 00EF 8C0080            cpd #128
 00F2 182700EA          lbeq L58
 00F6 18200143          lbra L16
 00FA           X1:
 00FA                   .dbline 70
 00FA           L19:
 00FA                   .dbline 72
 00FA           ;                    case 0x10:
 00FA           ;                                 if(PTP & 0x01) printf("1");
 00FA 1F0258010A        brclr 0x258,#1,L20
 00FF                   .dbline 72
 00FF CC046C            ldd #L22
 0102 160000            jsr _printf
 0105 18200134          lbra L17
 0109           L20:
 0109                   .dbline 73
 0109           ;                                 else if(PTP & 0x02) printf("4");
 0109 1F0258020A        brclr 0x258,#2,L23
 010E                   .dbline 73
 010E CC046A            ldd #L25
 0111 160000            jsr _printf
 0114 18200125          lbra L17
 0118           L23:
 0118                   .dbline 74
 0118           ;                                 else if(PTP & 0x04) printf("7");
 0118 1F0258040A        brclr 0x258,#4,L26
 011D                   .dbline 74
 011D CC0468            ldd #L28
 0120 160000            jsr _printf
 0123 18200116          lbra L17
 0127           L26:
 0127                   .dbline 75
 0127           ;                                 else if(PTP & 0x08){ 
 0127 1F02580802        brclr 0x258,#8,X2
 012C 2004              bra X3
 012E 1820010B  X2:     lbra L17
 0132           X3:
 0132                   .dbline 75
 0132                   .dbline 77
 0132           ;                                      
 0132           ;                                         duty++; 
 0132 FC0002            ldd _duty
 0135 C30001            addd #1
 0138 7C0002            std _duty
 013B                   .dbline 78
 013B           ;                                         PWMDTY7 = duty;
 013B FC0002            ldd _duty
 013E 7B00C3            stab 0xc3
 0141                   .dbline 80
 0141           ;                                        
 0141           ;                                         printf("E");
 0141 CC0466            ldd #L31
 0144 160000            jsr _printf
 0147                   .dbline 82
 0147           ;                                        
 0147           ;                                         displaySpeed_Temp(++changingSpeed, changingTemp);
 0147 1801800002        movw _changingTemp,0,sp
 014C FC0000            ldd _changingSpeed
 014F C30001            addd #1
 0152 6C18              std -8,x
 0154 1805180000        movw -8,x,_changingSpeed
 0159 EC18              ldd -8,x
 015B 16025C            jsr _displaySpeed_Temp
 015E                   .dbline 84
 015E           ;                             
 015E           ;                               }  
 015E                   .dbline 85
 015E           ;                        break;
 015E 182000DB          lbra L17
 0162           L32:
 0162                   .dbline 88
 0162           ; 
 0162           ;                    case 0x20:
 0162           ;                             if(PTP & 0x01) printf("2");
 0162 1F0258010A        brclr 0x258,#1,L33
 0167                   .dbline 88
 0167 CC0464            ldd #L35
 016A 160000            jsr _printf
 016D 182000CC          lbra L17
 0171           L33:
 0171                   .dbline 89
 0171           ;                                 else if(PTP & 0x02) printf("5");
 0171 1F0258020A        brclr 0x258,#2,L36
 0176                   .dbline 89
 0176 CC0462            ldd #L38
 0179 160000            jsr _printf
 017C 182000BD          lbra L17
 0180           L36:
 0180                   .dbline 90
 0180           ;                                 else if(PTP & 0x04) printf("8");
 0180 1F0258040A        brclr 0x258,#4,L39
 0185                   .dbline 90
 0185 CC0460            ldd #L41
 0188 160000            jsr _printf
 018B 182000AE          lbra L17
 018F           L39:
 018F                   .dbline 91
 018F           ;                                 else if(PTP & 0x08){
 018F 1F02580802        brclr 0x258,#8,X4
 0194 2004              bra X5
 0196 182000A3  X4:     lbra L17
 019A           X5:
 019A                   .dbline 91
 019A                   .dbline 92
 019A           ;                                     printf("0");
 019A CC045E            ldd #L44
 019D 160000            jsr _printf
 01A0                   .dbline 94
 01A0           ;                                         
 01A0           ;                                         PWMDTY7=0;
 01A0 7900C3            clr 0xc3
 01A3                   .dbline 95
 01A3           ;                                         asm("swi");
 01A3 3F                        swi
 01A4           
 01A4                   .dbline 96
 01A4           ;                                 }
 01A4                   .dbline 97
 01A4           ;                        break;
 01A4 18200095          lbra L17
 01A8           L45:
 01A8                   .dbline 100
 01A8           ;                    
 01A8           ;                    case 0x40:
 01A8           ;                             if(PTP & 0x01) printf("3");
 01A8 1F0258010A        brclr 0x258,#1,L46
 01AD                   .dbline 100
 01AD CC045C            ldd #L48
 01B0 160000            jsr _printf
 01B3 18200086          lbra L17
 01B7           L46:
 01B7                   .dbline 101
 01B7           ;                                 else if(PTP & 0x02) printf("6");
 01B7 1F0258020A        brclr 0x258,#2,L49
 01BC                   .dbline 101
 01BC CC045A            ldd #L51
 01BF 160000            jsr _printf
 01C2 18200077          lbra L17
 01C6           L49:
 01C6                   .dbline 102
 01C6           ;                                 else if(PTP & 0x04) printf("9");
 01C6 1F02580408        brclr 0x258,#4,L52
 01CB                   .dbline 102
 01CB CC0458            ldd #L54
 01CE 160000            jsr _printf
 01D1 206A              bra L17
 01D3           L52:
 01D3                   .dbline 103
 01D3           ;                                 else if(PTP & 0x08) printf("F");
 01D3 1F02580865        brclr 0x258,#8,L17
 01D8                   .dbline 103
 01D8 CC0456            ldd #L57
 01DB 160000            jsr _printf
 01DE                   .dbline 104
 01DE           ;                    break;
 01DE 205D              bra L17
 01E0           L58:
 01E0                   .dbline 107
 01E0           ;                        
 01E0           ;                    case 0x80:
 01E0           ;                             if(PTP & 0x01) printf("A");
 01E0 1F02580108        brclr 0x258,#1,L59
 01E5                   .dbline 107
 01E5 CC0454            ldd #L61
 01E8 160000            jsr _printf
 01EB 2050              bra L17
 01ED           L59:
 01ED                   .dbline 108
 01ED           ;                                 else if(PTP & 0x02) printf("B");
 01ED 1F02580208        brclr 0x258,#2,L62
 01F2                   .dbline 108
 01F2 CC0452            ldd #L64
 01F5 160000            jsr _printf
 01F8 2043              bra L17
 01FA           L62:
 01FA                   .dbline 109
 01FA           ;                                 else if(PTP & 0x04) printf("C");
 01FA 1F02580408        brclr 0x258,#4,L65
 01FF                   .dbline 109
 01FF CC0450            ldd #L67
 0202 160000            jsr _printf
 0205 2036              bra L17
 0207           L65:
 0207                   .dbline 110
 0207           ;                                 else if(PTP & 0x08){
 0207 1F02580831        brclr 0x258,#8,L17
 020C                   .dbline 110
 020C                   .dbline 111
 020C           ;                                      printf("D");
 020C CC044E            ldd #L70
 020F 160000            jsr _printf
 0212                   .dbline 112
 0212           ;                                          if (optCount>0) {
 0212 FC0006            ldd _optCount
 0215 2F0F              ble L71
 0217                   .dbline 112
 0217                   .dbline 113
 0217           ;                                         duty--; 
 0217 FC0002            ldd _duty
 021A 830001            subd #1
 021D 7C0002            std _duty
 0220                   .dbline 114
 0220           ;                                         PWMDTY7 = duty;
 0220 FC0002            ldd _duty
 0223 7B00C3            stab 0xc3
 0226                   .dbline 115
 0226           ;                                         }
 0226           L71:
 0226                   .dbline 116
 0226           ;                                          displaySpeed_Temp(--changingSpeed, changingTemp);
 0226 1801800002        movw _changingTemp,0,sp
 022B FC0000            ldd _changingSpeed
 022E 830001            subd #1
 0231 6C18              std -8,x
 0233 1805180000        movw -8,x,_changingSpeed
 0238 EC18              ldd -8,x
 023A 16025C            jsr _displaySpeed_Temp
 023D                   .dbline 117
 023D           ;                                 }
 023D                   .dbline 118
 023D           ;                    break; 
 023D           L16:
 023D           L17:
 023D                   .dbline 120
 023D           L9:
 023D                   .dbline 64
 023D EC1C              ldd -4,x
 023F 59                lsld
 0240 6C1C              std -4,x
 0242                   .dbline 64
 0242 EC1C              ldd -4,x
 0244 8C0008            cpd #8
 0247 182FFE47          lble L8
 024B                   .dbline 123
 024B           ;               }
 024B           ;        }
 024B           ;               
 024B           ;                                               
 024B           ;       PTP = 0x0F;
 024B C60F              ldab #15
 024D 7B0258            stab 0x258
 0250                   .dbline 124
 0250           ;       PIFH = PIFH; // Acknowledge (all) interrupts
 0250                   ; vol
 0250 F60267            ldab 0x267
 0253 7B0267            stab 0x267
 0256                   .dbline 125
 0256           ;     asm("cli");
 0256 10EF                      cli
 0258           
 0258                   .dbline -2
 0258                   .dbline 126
 0258           ; }
 0258           L7:
 0258 B757              tfr x,s
 025A 30                pulx
 025B                   .dbline 0 ; func end
 025B 0B                rti
 025C                   .dbsym l count -4 I
 025C                   .dbsym l i -2 I
 025C                   .dbend
 025C                   .dbfunc e displaySpeed_Temp _displaySpeed_Temp fV
 025C           ; arraycharstemp -> -22,x
 025C           ;     arraychars -> -18,x
 025C           ;    holderSpeed -> -10,x
 025C           ;     holderTemp -> -8,x
 025C           ;         number -> -6,x
 025C           ;      remainder -> -4,x
 025C           ;          index -> -2,x
 025C           ;           temp -> 6,x
 025C           ;          speed -> 2,x
 025C           _displaySpeed_Temp::
 025C 3B                pshd
 025D 34                pshx
 025E B775              tfr s,x
 0260 1BF1E8            leas -24,sp
 0263                   .dbline -1
 0263                   .dbline 131
 0263           ; /*
 0263           ; DisplaySpeed_Temp displays the speed and temp passed in to the lcd display.
 0263           ; */
 0263           ; 
 0263           ; void displaySpeed_Temp(int speed, int temp){  
 0263                   .dbline 133
 0263           ;        int number;
 0263           ;        int index=3;
 0263 CC0003            ldd #3
 0266 6C1E              std -2,x
 0268                   .dbline 136
 0268           ;        int arraychars[4];
 0268           ;        int arraycharstemp[2];
 0268           ;        int remainder=0;
 0268 CC0000            ldd #0
 026B 6C1C              std -4,x
 026D                   .dbline 137
 026D           ;        int holderSpeed=speed;
 026D ED02              ldy 2,x
 026F 6D16              sty -10,x
 0271                   .dbline 138
 0271           ;        int holderTemp=temp;
 0271 18020618          movw 6,x,-8,x
 0275                   .dbline 141
 0275           ;      
 0275           ;        
 0275           ;        LCD_instruction(1);
 0275 CC0001            ldd #1
 0278 160000            jsr _LCD_instruction
 027B                   .dbline 142
 027B           ;        LCD_display('S');
 027B CC0053            ldd #83
 027E 160000            jsr _LCD_display
 0281                   .dbline 143
 0281           ;        LCD_display('P');
 0281 CC0050            ldd #80
 0284 160000            jsr _LCD_display
 0287                   .dbline 144
 0287           ;        LCD_display('E');
 0287 CC0045            ldd #69
 028A 160000            jsr _LCD_display
 028D                   .dbline 145
 028D           ;        LCD_display('E');
 028D CC0045            ldd #69
 0290 160000            jsr _LCD_display
 0293                   .dbline 146
 0293           ;        LCD_display('D');
 0293 CC0044            ldd #68
 0296 160000            jsr _LCD_display
 0299 205A              bra L78
 029B           L77:
 029B                   .dbline 148
 029B           ;        while (index>=0)
 029B           ;        {
 029B                   .dbline 149
 029B           ;                  if(holderSpeed!=0)
 029B EC16              ldd -10,x
 029D 273C              beq L80
 029F                   .dbline 150
 029F           ;        {
 029F                   .dbline 152
 029F           ;      //takes the decimal value passed in and turns it into the decimal value representation in ASCII
 029F           ;        remainder=holderSpeed%10;
 029F EC16              ldd -10,x
 02A1 CD000A            ldy #10
 02A4 B7D6              exg x,y
 02A6 1815              idivs
 02A8 B7D6              exg x,y
 02AA 6C1C              std -4,x
 02AC                   .dbline 153
 02AC           ;        holderSpeed=holderSpeed/10;
 02AC EC16              ldd -10,x
 02AE CD000A            ldy #10
 02B1 B7D6              exg x,y
 02B3 1815              idivs
 02B5 B7D6              exg x,y
 02B7 6D16              sty -10,x
 02B9                   .dbline 154
 02B9           ;        remainder=remainder+0x30;
 02B9 EC1C              ldd -4,x
 02BB C30030            addd #48
 02BE 6C1C              std -4,x
 02C0                   .dbline 155
 02C0           ;        arraychars[index]=remainder;
 02C0 19E1EE            leay -18,x
 02C3 6DE1E8            sty -24,x
 02C6 EC1E              ldd -2,x
 02C8 59                lsld
 02C9 E3E1E8            addd -24,x
 02CC B7C6              xgdy
 02CE EC1C              ldd -4,x
 02D0 6C40              std 0,y
 02D2                   .dbline 156
 02D2           ;        index=index-1;
 02D2 EC1E              ldd -2,x
 02D4 830001            subd #1
 02D7 6C1E              std -2,x
 02D9                   .dbline 157
 02D9           ;        }       
 02D9 201A              bra L81
 02DB           L80:
 02DB                   .dbline 159
 02DB           ;        else
 02DB           ;        {
 02DB                   .dbline 160
 02DB           ;                       arraychars[index]=0x30;
 02DB 19E1EE            leay -18,x
 02DE 6DE1E8            sty -24,x
 02E1 EC1E              ldd -2,x
 02E3 59                lsld
 02E4 E3E1E8            addd -24,x
 02E7 B7C6              xgdy
 02E9 CC0030            ldd #48
 02EC 6C40              std 0,y
 02EE                   .dbline 161
 02EE           ;                       index=index-1;
 02EE EC1E              ldd -2,x
 02F0 830001            subd #1
 02F3 6C1E              std -2,x
 02F5                   .dbline 162
 02F5           ;        }
 02F5           L81:
 02F5                   .dbline 163
 02F5           L78:
 02F5                   .dbline 147
 02F5 EC1E              ldd -2,x
 02F7 2CA2              bge L77
 02F9                   .dbline 164
 02F9           ;        }
 02F9           ;        LCD_display(' ');
 02F9 CC0020            ldd #32
 02FC 160000            jsr _LCD_display
 02FF                   .dbline 165
 02FF           ;        for(index=0;index<4;index++)
 02FF CC0000            ldd #0
 0302 6C1E              std -2,x
 0304           L82:
 0304                   .dbline 166
 0304                   .dbline 167
 0304 19E1EE            leay -18,x
 0307 6DE1E8            sty -24,x
 030A EC1E              ldd -2,x
 030C 59                lsld
 030D E3E1E8            addd -24,x
 0310 B7C6              xgdy
 0312 ED40              ldy 0,y
 0314 6D1A              sty -6,x
 0316                   .dbline 168
 0316 EC1A              ldd -6,x
 0318 160000            jsr _LCD_display
 031B                   .dbline 169
 031B           L83:
 031B                   .dbline 165
 031B EC1E              ldd -2,x
 031D C30001            addd #1
 0320 6C1E              std -2,x
 0322                   .dbline 165
 0322 EC1E              ldd -2,x
 0324 8C0004            cpd #4
 0327 2DDB              blt L82
 0329                   .dbline 171
 0329           ;        {
 0329           ;               number=arraychars[index];
 0329           ;               LCD_display(number);
 0329           ;        }
 0329           ;        
 0329           ;        index=1;
 0329 CC0001            ldd #1
 032C 6C1E              std -2,x
 032E                   .dbline 173
 032E           ;        //goes to the next line.
 032E           ;        LCD_instruction(0xC0); 
 032E CC00C0            ldd #192
 0331 160000            jsr _LCD_instruction
 0334                   .dbline 174
 0334           ;        LCD_display('T');
 0334 CC0054            ldd #84
 0337 160000            jsr _LCD_display
 033A                   .dbline 175
 033A           ;        LCD_display('E');
 033A CC0045            ldd #69
 033D 160000            jsr _LCD_display
 0340                   .dbline 176
 0340           ;        LCD_display('M');
 0340 CC004D            ldd #77
 0343 160000            jsr _LCD_display
 0346                   .dbline 177
 0346           ;        LCD_display('P');
 0346 CC0050            ldd #80
 0349 160000            jsr _LCD_display
 034C                   .dbline 178
 034C           ;        LCD_display('E');
 034C CC0045            ldd #69
 034F 160000            jsr _LCD_display
 0352                   .dbline 179
 0352           ;        LCD_display('R');
 0352 CC0052            ldd #82
 0355 160000            jsr _LCD_display
 0358                   .dbline 180
 0358           ;        LCD_display('A');
 0358 CC0041            ldd #65
 035B 160000            jsr _LCD_display
 035E                   .dbline 181
 035E           ;        LCD_display('T');
 035E CC0054            ldd #84
 0361 160000            jsr _LCD_display
 0364                   .dbline 182
 0364           ;        LCD_display('U');
 0364 CC0055            ldd #85
 0367 160000            jsr _LCD_display
 036A                   .dbline 183
 036A           ;        LCD_display('R');
 036A CC0052            ldd #82
 036D 160000            jsr _LCD_display
 0370                   .dbline 184
 0370           ;        LCD_display('E');
 0370 CC0045            ldd #69
 0373 160000            jsr _LCD_display
 0376 203A              bra L87
 0378           L86:
 0378                   .dbline 187
 0378                   .dbline 188
 0378 EC18              ldd -8,x
 037A CD000A            ldy #10
 037D B7D6              exg x,y
 037F 1815              idivs
 0381 B7D6              exg x,y
 0383 6C1C              std -4,x
 0385                   .dbline 189
 0385 EC18              ldd -8,x
 0387 CD000A            ldy #10
 038A B7D6              exg x,y
 038C 1815              idivs
 038E B7D6              exg x,y
 0390 6D18              sty -8,x
 0392                   .dbline 190
 0392 EC1C              ldd -4,x
 0394 C30030            addd #48
 0397 6C1C              std -4,x
 0399                   .dbline 191
 0399 19E1EA            leay -22,x
 039C 6DE1E8            sty -24,x
 039F EC1E              ldd -2,x
 03A1 59                lsld
 03A2 E3E1E8            addd -24,x
 03A5 B7C6              xgdy
 03A7 EC1C              ldd -4,x
 03A9 6C40              std 0,y
 03AB                   .dbline 192
 03AB EC1E              ldd -2,x
 03AD 830001            subd #1
 03B0 6C1E              std -2,x
 03B2                   .dbline 193
 03B2           L87:
 03B2                   .dbline 186
 03B2           ; 
 03B2           ;        while (index>=0)
 03B2 EC1E              ldd -2,x
 03B4 2CC2              bge L86
 03B6                   .dbline 194
 03B6           ;        {
 03B6           ;                  remainder=holderTemp%10;
 03B6           ;          holderTemp=holderTemp/10;
 03B6           ;                  remainder=remainder+0x30;
 03B6           ;                  arraycharstemp[index]=remainder;
 03B6           ;                  index=index-1;
 03B6           ;        } 
 03B6           ;        LCD_display(' ');
 03B6 CC0020            ldd #32
 03B9 160000            jsr _LCD_display
 03BC                   .dbline 195
 03BC           ;        for(index=0;index<2;index++)
 03BC CC0000            ldd #0
 03BF 6C1E              std -2,x
 03C1           L89:
 03C1                   .dbline 196
 03C1                   .dbline 197
 03C1 19E1EA            leay -22,x
 03C4 6DE1E8            sty -24,x
 03C7 EC1E              ldd -2,x
 03C9 59                lsld
 03CA E3E1E8            addd -24,x
 03CD B7C6              xgdy
 03CF ED40              ldy 0,y
 03D1 6D1A              sty -6,x
 03D3                   .dbline 199
 03D3 EC1A              ldd -6,x
 03D5 160000            jsr _LCD_display
 03D8                   .dbline 200
 03D8           L90:
 03D8                   .dbline 195
 03D8 EC1E              ldd -2,x
 03DA C30001            addd #1
 03DD 6C1E              std -2,x
 03DF                   .dbline 195
 03DF EC1E              ldd -2,x
 03E1 8C0002            cpd #2
 03E4 2DDB              blt L89
 03E6                   .dbline 202
 03E6           ;        {
 03E6           ;               number=arraycharstemp[index];
 03E6           ; 
 03E6           ;               LCD_display(number);
 03E6           ;        }
 03E6           ;        
 03E6           ;        LCD_display('C');
 03E6 CC0043            ldd #67
 03E9 160000            jsr _LCD_display
 03EC                   .dbline -2
 03EC                   .dbline 203
 03EC           ; }
 03EC           L76:
 03EC B757              tfr x,s
 03EE 30                pulx
 03EF 1B82              leas 2,sp
 03F1                   .dbline 0 ; func end
 03F1 3D                rts
 03F2                   .dbsym l arraycharstemp -22 A[4:2]I
 03F2                   .dbsym l arraychars -18 A[8:4]I
 03F2                   .dbsym l holderSpeed -10 I
 03F2                   .dbsym l holderTemp -8 I
 03F2                   .dbsym l number -6 I
 03F2                   .dbsym l remainder -4 I
 03F2                   .dbsym l index -2 I
 03F2                   .dbsym l temp 6 I
 03F2                   .dbsym l speed 2 I
 03F2                   .dbend
 03F2                   .dbfunc e CollisionDetect _CollisionDetect fV
 03F2           _CollisionDetect::
 03F2 34                pshx
 03F3 B775              tfr s,x
 03F5 1B9E              leas -2,sp
 03F7                   .dbline -1
 03F7                   .dbline 210
 03F7           ; 
 03F7           ; /*
 03F7           ; This function is the Real-Time ISR and interruts the program when the user presses 5 on the keyboard. It executes the
 03F7           ; interrupt turns off the dc motor waits 3-4 second and turns the steppor motor then afterwards it turns on the dc motor again.
 03F7           ; */
 03F7           ;  void CollisionDetect(void)
 03F7           ; {
 03F7                   .dbline 211
 03F7           ;        asm("sei");
 03F7 1410                      sei
 03F9           
 03F9                   .dbline 213
 03F9           ; 
 03F9           ;      counterInterrupt++;
 03F9 FC0004            ldd _counterInterrupt
 03FC C30001            addd #1
 03FF 7C0004            std _counterInterrupt
 0402                   .dbline 215
 0402           ;        //printf("counterInterrupt = %d\n", counterInterrupt);
 0402           ;        if (counterInterrupt==4) {
 0402 FC0004            ldd _counterInterrupt
 0405 8C0004            cpd #4
 0408 2617              bne L94
 040A                   .dbline 215
 040A                   .dbline 216
 040A           ;             printf(" the RPS is \t%d",optCount);
 040A 1801800006        movw _optCount,0,sp
 040F CC043E            ldd #L96
 0412 160000            jsr _printf
 0415                   .dbline 217
 0415           ;                 counterInterrupt=0;
 0415 CC0000            ldd #0
 0418 7C0004            std _counterInterrupt
 041B                   .dbline 218
 041B           ;                 optCount =0;
 041B CC0000            ldd #0
 041E 7C0006            std _optCount
 0421                   .dbline 219
 0421           ;        }
 0421           L94:
 0421                   .dbline 221
 0421           ;        
 0421           ;        CRGFLG = 0x80; //clear the RTI flag
 0421 C680              ldab #128
 0423 7B0037            stab 0x37
 0426                   .dbline 222
 0426           ;        asm("cli");
 0426 10EF                      cli
 0428           
 0428                   .dbline -2
 0428                   .dbline 223
 0428           ; }
 0428           L93:
 0428 B757              tfr x,s
 042A 30                pulx
 042B                   .dbline 0 ; func end
 042B 0B                rti
 042C                   .dbend
 042C                   .dbfunc e pacA_isr _pacA_isr fV
 042C           _pacA_isr::
 042C                   .dbline -1
 042C                   .dbline 225
 042C           ; 
 042C           ; void pacA_isr(void) {
 042C                   .dbline 227
 042C           ;       //printf("MOTOR WORKS");
 042C           ;       INTR_OFF();
 042C 1410                      sei
 042E           
 042E                   .dbline 228
 042E           ;     optCount++;
 042E FC0006            ldd _optCount
 0431 C30001            addd #1
 0434 7C0006            std _optCount
 0437                   .dbline 229
 0437           ;     PAFLG |= 1;
 0437 1C006101          bset 0x61,#1
 043B                   .dbline 230
 043B           ;     INTR_ON();
 043B 10EF                      cli
 043D           
 043D                   .dbline -2
 043D                   .dbline 231
 043D           ; }
 043D           L97:
 043D                   .dbline 0 ; func end
 043D 0B                rti
 043E                   .dbend
                        .area bss
 0000                   .dbfile M:\Assign51\Assign52.c
 0000           _i::
 0000                   .blkb 2
 0002                   .dbsym e i _i I
 0002           _duty::
 0002                   .blkb 2
 0004                   .dbsym e duty _duty I
                        .area text
 043E                   .dbfile M:\Assign51\Assign52.c
 043E           L96:
 043E 20746865205250532069732009256400  .byte 32,'t,'h,'e,32,'R,'P,'S,32,'i,'s,32,9,37,'d,0
 044E           L70:
 044E 4400              .byte 'D,0
 0450           L67:
 0450 4300              .byte 'C,0
 0452           L64:
 0452 4200              .byte 'B,0
 0454           L61:
 0454 4100              .byte 'A,0
 0456           L57:
 0456 4600              .byte 'F,0
 0458           L54:
 0458 3900              .byte 57,0
 045A           L51:
 045A 3600              .byte 54,0
 045C           L48:
 045C 3300              .byte 51,0
 045E           L44:
 045E 3000              .byte 48,0
 0460           L41:
 0460 3800              .byte 56,0
 0462           L38:
 0462 3500              .byte 53,0
 0464           L35:
 0464 3200              .byte 50,0
 0466           L31:
 0466 4500              .byte 'E,0
 0468           L28:
 0468 3700              .byte 55,0
 046A           L25:
 046A 3400              .byte 52,0
 046C           L22:
 046C 3100              .byte 49,0
