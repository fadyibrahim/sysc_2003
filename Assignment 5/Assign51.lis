                        .module Assign51.c
                        .area data
 0000           _changingSpeed::
 0000                   .blkb 2
                        .area idata
 0000 007B              .word 123
                        .area data
 0002                   .dbfile Assign51.c
 0002                   .dbsym e changingSpeed _changingSpeed I
 0002           _changingTemp::
 0002                   .blkb 2
                        .area idata
 0002 0017              .word 23
                        .area data
 0004                   .dbfile Assign51.c
 0004                   .dbsym e changingTemp _changingTemp I
                        .area text
 0000                   .dbfile Assign51.c
 0000                   .dbfunc e main _main fV
 0000           ;          ?temp -> -2,x
 0000           _main::
 0000 34                pshx
 0001 B775              tfr s,x
 0003 1B9C              leas -4,sp
 0005                   .dbline -1
 0005                   .dbline 13
 0005           ; /*
 0005           ; Authors Gavez Smith 100857991, Fady Ibrahim 100876906
 0005           ; */
 0005           ; #include "hcs12dp256.h"
 0005           ; #include"stdio.h"
 0005           ; #pragma interrupt_handler printKeysPressed()
 0005           ; 
 0005           ; void Inc_Dec_Speed(int speed, int temp );
 0005           ; void displaySpeed_Temp(int speed, int temp);
 0005           ; int changingSpeed=123;
 0005           ; int changingTemp=23;
 0005           ; 
 0005           ; void main(){
 0005                   .dbline 15
 0005           ; 
 0005           ;        Lcd2PP_Init();
 0005 160000            jsr _Lcd2PP_Init
 0008                   .dbline 16
 0008           ;        displaySpeed_Temp(++changingSpeed, changingTemp);
 0008 1801800002        movw _changingTemp,0,sp
 000D FC0000            ldd _changingSpeed
 0010 C30001            addd #1
 0013 6C1E              std -2,x
 0015 18051E0000        movw -2,x,_changingSpeed
 001A EC1E              ldd -2,x
 001C 1601F1            jsr _displaySpeed_Temp
 001F                   .dbline 17
 001F           ;        DDRP |= 0x0F; // bitset PP0-3 as outputs (rows) 
 001F 1C025A0F          bset 0x25a,#15
 0023                   .dbline 18
 0023           ;        DDRH &= 0x0F; // bitclear PH4..7 as inputs (columns)
 0023 1D0262F0          bclr 0x262,#0xf0
 0027                   .dbline 19
 0027           ;        PTP = 0x0F; // Set scan row(s)
 0027 C60F              ldab #15
 0029 7B0258            stab 0x258
 002C                   .dbline 20
 002C           ;        PIFH = 0xFF; // Clear previous interrupt flags
 002C C6FF              ldab #255
 002E 7B0267            stab 0x267
 0031                   .dbline 21
 0031           ;        PPSH = 0xF0; // Rising Edge
 0031 C6F0              ldab #240
 0033 7B0265            stab 0x265
 0036                   .dbline 22
 0036           ;        PERH = 0x00; // Disable pulldowns
 0036 790264            clr 0x264
 0039                   .dbline 23
 0039           ;        PIEH |= 0xF0; // Local enable on columns inputs
 0039 1C0266F0          bset 0x266,#240
 003D                   .dbline 29
 003D           ;        // enable the latch.
 003D           ;        //PTM |= 0x08;
 003D           ;        //
 003D           ;        
 003D           ;        //asm("LDS #$3DFF");   
 003D           ;        asm("cli");
 003D 10EF                      cli
 003F           
 003F           L4:
 003F                   .dbline 31
 003F                   .dbline 31
 003F           L5:
 003F                   .dbline 31
 003F 20FE              bra L4
 0041           X0:
 0041                   .dbline 31
 0041           ;        
 0041           ;        while(1){};
 0041                   .dbline -2
 0041                   .dbline 33
 0041           ;        
 0041           ; }
 0041           L3:
 0041 B757              tfr x,s
 0043 30                pulx
 0044                   .dbline 0 ; func end
 0044 3D                rts
 0045                   .dbend
 0045                   .dbfunc e printKeysPressed _printKeysPressed fV
 0045           ;          ?temp -> -8,x
 0045           ;          ?temp -> -8,x
 0045           ;          ?temp -> -6,x
 0045           ;          count -> -4,x
 0045           ;              i -> -2,x
 0045           _printKeysPressed::
 0045 34                pshx
 0046 B775              tfr s,x
 0048 1B96              leas -10,sp
 004A                   .dbline -1
 004A                   .dbline 39
 004A           ; 
 004A           ; /*
 004A           ; printKeysPressed gets the character pressed on the keyboard by pulling and then it prints out the value on the terminal.
 004A           ; 
 004A           ; */
 004A           ; void printKeysPressed(){   
 004A                   .dbline 41
 004A           ;       int i, count;
 004A           ;       asm("sei");
 004A 1410                      sei
 004C           
 004C                   .dbline 43
 004C           ; 
 004C           ;       for (count=1; count<=0x08; count<<=1)
 004C CC0001            ldd #1
 004F 6C1C              std -4,x
 0051           L8:
 0051                   .dbline 44
 0051           ;       {
 0051                   .dbline 45
 0051           ;               PTH&=0x0F;
 0051 1D0260F0          bclr 0x260,#0xf0
 0055                   .dbline 46
 0055           ;               PTP = (PTP&0xF0) | count;
 0055                   ; vol
 0055 F60258            ldab 0x258
 0058 87                clra
 0059 8400              anda #0
 005B C4F0              andb #240
 005D AA1C              ora -4,x
 005F EA1D              orb -3,x
 0061 7B0258            stab 0x258
 0064                   .dbline 48
 0064 CC0000            ldd #0
 0067 6C1E              std -2,x
 0069           L12:
 0069                   .dbline 48
 0069           L13:
 0069                   .dbline 48
 0069           ;               
 0069           ;               for (i=0;i<1000;i++);
 0069 EC1E              ldd -2,x
 006B C30001            addd #1
 006E 6C1E              std -2,x
 0070                   .dbline 48
 0070 EC1E              ldd -2,x
 0072 8C03E8            cpd #1000
 0075 2DF2              blt L12
 0077                   .dbline 49
 0077           ;               switch(PTH & 0xF0){
 0077                   ; vol
 0077 F60260            ldab 0x260
 007A 87                clra
 007B 8400              anda #0
 007D C4F0              andb #240
 007F 6C1A              std -6,x
 0081 8C0020            cpd #32
 0084 1827008A          lbeq L32
 0088 EC1A              ldd -6,x
 008A 8C0020            cpd #32
 008D 2E0B              bgt L72
 008F           L71:
 008F EC1A              ldd -6,x
 0091 8C0010            cpd #16
 0094 2723              beq L19
 0096 18200138          lbra L16
 009A           L72:
 009A EC1A              ldd -6,x
 009C 8C0040            cpd #64
 009F 182700B2          lbeq L45
 00A3 EC1A              ldd -6,x
 00A5 8C0040            cpd #64
 00A8 182D0126          lblt L16
 00AC           L73:
 00AC EC1A              ldd -6,x
 00AE 8C0080            cpd #128
 00B1 182700D4          lbeq L58
 00B5 18200119          lbra L16
 00B9           X1:
 00B9                   .dbline 49
 00B9           L19:
 00B9                   .dbline 51
 00B9           ;                    case 0x10:
 00B9           ;                                 if(PTP & 0x01) printf("1");
 00B9 1F0258010A        brclr 0x258,#1,L20
 00BE                   .dbline 51
 00BE CC03A5            ldd #L22
 00C1 160000            jsr _printf
 00C4 1820010A          lbra L17
 00C8           L20:
 00C8                   .dbline 52
 00C8           ;                                 else if(PTP & 0x02) printf("4");
 00C8 1F0258020A        brclr 0x258,#2,L23
 00CD                   .dbline 52
 00CD CC03A3            ldd #L25
 00D0 160000            jsr _printf
 00D3 182000FB          lbra L17
 00D7           L23:
 00D7                   .dbline 53
 00D7           ;                                 else if(PTP & 0x04) printf("7");
 00D7 1F0258040A        brclr 0x258,#4,L26
 00DC                   .dbline 53
 00DC CC03A1            ldd #L28
 00DF 160000            jsr _printf
 00E2 182000EC          lbra L17
 00E6           L26:
 00E6                   .dbline 54
 00E6           ;                                 else if(PTP & 0x08){ 
 00E6 1F02580802        brclr 0x258,#8,X2
 00EB 2004              bra X3
 00ED 182000E1  X2:     lbra L17
 00F1           X3:
 00F1                   .dbline 54
 00F1                   .dbline 55
 00F1           ;                                     printf("E");
 00F1 CC039F            ldd #L31
 00F4 160000            jsr _printf
 00F7                   .dbline 56
 00F7           ;                                         displaySpeed_Temp(++changingSpeed, changingTemp);
 00F7 1801800002        movw _changingTemp,0,sp
 00FC FC0000            ldd _changingSpeed
 00FF C30001            addd #1
 0102 6C18              std -8,x
 0104 1805180000        movw -8,x,_changingSpeed
 0109 EC18              ldd -8,x
 010B 1601F1            jsr _displaySpeed_Temp
 010E                   .dbline 57
 010E           ;                             }
 010E                   .dbline 58
 010E           ;                        break;
 010E 182000C0          lbra L17
 0112           L32:
 0112                   .dbline 61
 0112           ; 
 0112           ;                    case 0x20:
 0112           ;                             if(PTP & 0x01) printf("2");
 0112 1F0258010A        brclr 0x258,#1,L33
 0117                   .dbline 61
 0117 CC039D            ldd #L35
 011A 160000            jsr _printf
 011D 182000B1          lbra L17
 0121           L33:
 0121                   .dbline 62
 0121           ;                                 else if(PTP & 0x02) printf("5");
 0121 1F0258020A        brclr 0x258,#2,L36
 0126                   .dbline 62
 0126 CC039B            ldd #L38
 0129 160000            jsr _printf
 012C 182000A2          lbra L17
 0130           L36:
 0130                   .dbline 63
 0130           ;                                 else if(PTP & 0x04) printf("8");
 0130 1F0258040A        brclr 0x258,#4,L39
 0135                   .dbline 63
 0135 CC0399            ldd #L41
 0138 160000            jsr _printf
 013B 18200093          lbra L17
 013F           L39:
 013F                   .dbline 64
 013F           ;                                 else if(PTP & 0x08){
 013F 1F02580802        brclr 0x258,#8,X4
 0144 2004              bra X5
 0146 18200088  X4:     lbra L17
 014A           X5:
 014A                   .dbline 64
 014A                   .dbline 65
 014A           ;                                     printf("0");
 014A CC0397            ldd #L44
 014D 160000            jsr _printf
 0150                   .dbline 66
 0150           ;                                         asm("swi");
 0150 3F                        swi
 0151           
 0151                   .dbline 67
 0151           ;                                 }
 0151                   .dbline 68
 0151           ;                        break;
 0151 1820007D          lbra L17
 0155           L45:
 0155                   .dbline 71
 0155           ;                    
 0155           ;                    case 0x40:
 0155           ;                             if(PTP & 0x01) printf("3");
 0155 1F02580108        brclr 0x258,#1,L46
 015A                   .dbline 71
 015A CC0395            ldd #L48
 015D 160000            jsr _printf
 0160 2070              bra L17
 0162           L46:
 0162                   .dbline 72
 0162           ;                                 else if(PTP & 0x02) printf("6");
 0162 1F02580208        brclr 0x258,#2,L49
 0167                   .dbline 72
 0167 CC0393            ldd #L51
 016A 160000            jsr _printf
 016D 2063              bra L17
 016F           L49:
 016F                   .dbline 73
 016F           ;                                 else if(PTP & 0x04) printf("9");
 016F 1F02580408        brclr 0x258,#4,L52
 0174                   .dbline 73
 0174 CC0391            ldd #L54
 0177 160000            jsr _printf
 017A 2056              bra L17
 017C           L52:
 017C                   .dbline 74
 017C           ;                                 else if(PTP & 0x08) printf("F");
 017C 1F02580851        brclr 0x258,#8,L17
 0181                   .dbline 74
 0181 CC038F            ldd #L57
 0184 160000            jsr _printf
 0187                   .dbline 75
 0187           ;                    break;
 0187 2049              bra L17
 0189           L58:
 0189                   .dbline 78
 0189           ;                        
 0189           ;                    case 0x80:
 0189           ;                             if(PTP & 0x01) printf("A");
 0189 1F02580108        brclr 0x258,#1,L59
 018E                   .dbline 78
 018E CC038D            ldd #L61
 0191 160000            jsr _printf
 0194 203C              bra L17
 0196           L59:
 0196                   .dbline 79
 0196           ;                                 else if(PTP & 0x02) printf("B");
 0196 1F02580208        brclr 0x258,#2,L62
 019B                   .dbline 79
 019B CC038B            ldd #L64
 019E 160000            jsr _printf
 01A1 202F              bra L17
 01A3           L62:
 01A3                   .dbline 80
 01A3           ;                                 else if(PTP & 0x04) printf("C");
 01A3 1F02580408        brclr 0x258,#4,L65
 01A8                   .dbline 80
 01A8 CC0389            ldd #L67
 01AB 160000            jsr _printf
 01AE 2022              bra L17
 01B0           L65:
 01B0                   .dbline 81
 01B0           ;                                 else if(PTP & 0x08){
 01B0 1F0258081D        brclr 0x258,#8,L17
 01B5                   .dbline 81
 01B5                   .dbline 82
 01B5           ;                                      printf("D");
 01B5 CC0387            ldd #L70
 01B8 160000            jsr _printf
 01BB                   .dbline 83
 01BB           ;                                          displaySpeed_Temp(--changingSpeed, changingTemp);
 01BB 1801800002        movw _changingTemp,0,sp
 01C0 FC0000            ldd _changingSpeed
 01C3 830001            subd #1
 01C6 6C18              std -8,x
 01C8 1805180000        movw -8,x,_changingSpeed
 01CD EC18              ldd -8,x
 01CF 1601F1            jsr _displaySpeed_Temp
 01D2                   .dbline 84
 01D2           ;                                 }
 01D2                   .dbline 85
 01D2           ;                    break; 
 01D2           L16:
 01D2           L17:
 01D2                   .dbline 87
 01D2           L9:
 01D2                   .dbline 43
 01D2 EC1C              ldd -4,x
 01D4 59                lsld
 01D5 6C1C              std -4,x
 01D7                   .dbline 43
 01D7 EC1C              ldd -4,x
 01D9 8C0008            cpd #8
 01DC 182FFE71          lble L8
 01E0                   .dbline 90
 01E0           ;               }
 01E0           ;        }
 01E0           ;               
 01E0           ;                                               
 01E0           ;       PTP = 0x0F;
 01E0 C60F              ldab #15
 01E2 7B0258            stab 0x258
 01E5                   .dbline 91
 01E5           ;       PIFH = PIFH; // Acknowledge (all) interrupts
 01E5                   ; vol
 01E5 F60267            ldab 0x267
 01E8 7B0267            stab 0x267
 01EB                   .dbline 92
 01EB           ;     asm("cli");
 01EB 10EF                      cli
 01ED           
 01ED                   .dbline -2
 01ED                   .dbline 93
 01ED           ; }
 01ED           L7:
 01ED B757              tfr x,s
 01EF 30                pulx
 01F0                   .dbline 0 ; func end
 01F0 0B                rti
 01F1                   .dbsym l count -4 I
 01F1                   .dbsym l i -2 I
 01F1                   .dbend
 01F1                   .dbfunc e displaySpeed_Temp _displaySpeed_Temp fV
 01F1           ; arraycharstemp -> -22,x
 01F1           ;     arraychars -> -18,x
 01F1           ;    holderSpeed -> -10,x
 01F1           ;     holderTemp -> -8,x
 01F1           ;         number -> -6,x
 01F1           ;      remainder -> -4,x
 01F1           ;          index -> -2,x
 01F1           ;           temp -> 6,x
 01F1           ;          speed -> 2,x
 01F1           _displaySpeed_Temp::
 01F1 3B                pshd
 01F2 34                pshx
 01F3 B775              tfr s,x
 01F5 1BF1E8            leas -24,sp
 01F8                   .dbline -1
 01F8                   .dbline 98
 01F8           ; /*
 01F8           ; DisplaySpeed_Temp displays the speed and temp passed in to the lcd display.
 01F8           ; */
 01F8           ; 
 01F8           ; void displaySpeed_Temp(int speed, int temp){  
 01F8                   .dbline 100
 01F8           ;        int number;
 01F8           ;        int index=3;
 01F8 CC0003            ldd #3
 01FB 6C1E              std -2,x
 01FD                   .dbline 103
 01FD           ;        int arraychars[4];
 01FD           ;        int arraycharstemp[2];
 01FD           ;        int remainder=0;
 01FD CC0000            ldd #0
 0200 6C1C              std -4,x
 0202                   .dbline 104
 0202           ;        int holderSpeed=speed;
 0202 ED02              ldy 2,x
 0204 6D16              sty -10,x
 0206                   .dbline 105
 0206           ;        int holderTemp=temp;
 0206 18020618          movw 6,x,-8,x
 020A                   .dbline 106
 020A           ;      LCD_instruction(1);
 020A CC0001            ldd #1
 020D 160000            jsr _LCD_instruction
 0210                   .dbline 107
 0210           ;        LCD_display('S');
 0210 CC0053            ldd #83
 0213 160000            jsr _LCD_display
 0216                   .dbline 108
 0216           ;        LCD_display('P');
 0216 CC0050            ldd #80
 0219 160000            jsr _LCD_display
 021C                   .dbline 109
 021C           ;        LCD_display('E');
 021C CC0045            ldd #69
 021F 160000            jsr _LCD_display
 0222                   .dbline 110
 0222           ;        LCD_display('E');
 0222 CC0045            ldd #69
 0225 160000            jsr _LCD_display
 0228                   .dbline 111
 0228           ;        LCD_display('D');
 0228 CC0044            ldd #68
 022B 160000            jsr _LCD_display
 022E 205A              bra L76
 0230           L75:
 0230                   .dbline 113
 0230           ;        while (index>=0)
 0230           ;        {
 0230                   .dbline 114
 0230           ;                  if(holderSpeed!=0)
 0230 EC16              ldd -10,x
 0232 273C              beq L78
 0234                   .dbline 115
 0234           ;        {
 0234                   .dbline 117
 0234           ; //takes the decimal value passed in and turns it into the decimal value representation in ASCII
 0234           ;        remainder=holderSpeed%10;
 0234 EC16              ldd -10,x
 0236 CD000A            ldy #10
 0239 B7D6              exg x,y
 023B 1815              idivs
 023D B7D6              exg x,y
 023F 6C1C              std -4,x
 0241                   .dbline 118
 0241           ;        holderSpeed=holderSpeed/10;
 0241 EC16              ldd -10,x
 0243 CD000A            ldy #10
 0246 B7D6              exg x,y
 0248 1815              idivs
 024A B7D6              exg x,y
 024C 6D16              sty -10,x
 024E                   .dbline 119
 024E           ;        remainder=remainder+0x30;
 024E EC1C              ldd -4,x
 0250 C30030            addd #48
 0253 6C1C              std -4,x
 0255                   .dbline 120
 0255           ;        arraychars[index]=remainder;
 0255 19E1EE            leay -18,x
 0258 6DE1E8            sty -24,x
 025B EC1E              ldd -2,x
 025D 59                lsld
 025E E3E1E8            addd -24,x
 0261 B7C6              xgdy
 0263 EC1C              ldd -4,x
 0265 6C40              std 0,y
 0267                   .dbline 121
 0267           ;        index=index-1;
 0267 EC1E              ldd -2,x
 0269 830001            subd #1
 026C 6C1E              std -2,x
 026E                   .dbline 122
 026E           ;        }       
 026E 201A              bra L79
 0270           L78:
 0270                   .dbline 124
 0270           ;        else
 0270           ;        {
 0270                   .dbline 125
 0270           ;                       arraychars[index]=0x30;
 0270 19E1EE            leay -18,x
 0273 6DE1E8            sty -24,x
 0276 EC1E              ldd -2,x
 0278 59                lsld
 0279 E3E1E8            addd -24,x
 027C B7C6              xgdy
 027E CC0030            ldd #48
 0281 6C40              std 0,y
 0283                   .dbline 126
 0283           ;                       index=index-1;
 0283 EC1E              ldd -2,x
 0285 830001            subd #1
 0288 6C1E              std -2,x
 028A                   .dbline 127
 028A           ;        }
 028A           L79:
 028A                   .dbline 128
 028A           L76:
 028A                   .dbline 112
 028A EC1E              ldd -2,x
 028C 2CA2              bge L75
 028E                   .dbline 129
 028E           ;        }
 028E           ;        LCD_display(' ');
 028E CC0020            ldd #32
 0291 160000            jsr _LCD_display
 0294                   .dbline 130
 0294           ;        for(index=0;index<4;index++)
 0294 CC0000            ldd #0
 0297 6C1E              std -2,x
 0299           L80:
 0299                   .dbline 131
 0299                   .dbline 132
 0299 19E1EE            leay -18,x
 029C 6DE1E8            sty -24,x
 029F EC1E              ldd -2,x
 02A1 59                lsld
 02A2 E3E1E8            addd -24,x
 02A5 B7C6              xgdy
 02A7 ED40              ldy 0,y
 02A9 6D1A              sty -6,x
 02AB                   .dbline 133
 02AB EC1A              ldd -6,x
 02AD 160000            jsr _LCD_display
 02B0                   .dbline 134
 02B0           L81:
 02B0                   .dbline 130
 02B0 EC1E              ldd -2,x
 02B2 C30001            addd #1
 02B5 6C1E              std -2,x
 02B7                   .dbline 130
 02B7 EC1E              ldd -2,x
 02B9 8C0004            cpd #4
 02BC 2DDB              blt L80
 02BE                   .dbline 136
 02BE           ;        {
 02BE           ;               number=arraychars[index];
 02BE           ;               LCD_display(number);
 02BE           ;        }
 02BE           ;        
 02BE           ;        index=1;
 02BE CC0001            ldd #1
 02C1 6C1E              std -2,x
 02C3                   .dbline 138
 02C3           ;        //goes to the next line.
 02C3           ;        LCD_instruction(0xC0); 
 02C3 CC00C0            ldd #192
 02C6 160000            jsr _LCD_instruction
 02C9                   .dbline 139
 02C9           ;        LCD_display('T');
 02C9 CC0054            ldd #84
 02CC 160000            jsr _LCD_display
 02CF                   .dbline 140
 02CF           ;        LCD_display('E');
 02CF CC0045            ldd #69
 02D2 160000            jsr _LCD_display
 02D5                   .dbline 141
 02D5           ;        LCD_display('M');
 02D5 CC004D            ldd #77
 02D8 160000            jsr _LCD_display
 02DB                   .dbline 142
 02DB           ;        LCD_display('P');
 02DB CC0050            ldd #80
 02DE 160000            jsr _LCD_display
 02E1                   .dbline 143
 02E1           ;        LCD_display('E');
 02E1 CC0045            ldd #69
 02E4 160000            jsr _LCD_display
 02E7                   .dbline 144
 02E7           ;        LCD_display('R');
 02E7 CC0052            ldd #82
 02EA 160000            jsr _LCD_display
 02ED                   .dbline 145
 02ED           ;        LCD_display('A');
 02ED CC0041            ldd #65
 02F0 160000            jsr _LCD_display
 02F3                   .dbline 146
 02F3           ;        LCD_display('T');
 02F3 CC0054            ldd #84
 02F6 160000            jsr _LCD_display
 02F9                   .dbline 147
 02F9           ;        LCD_display('U');
 02F9 CC0055            ldd #85
 02FC 160000            jsr _LCD_display
 02FF                   .dbline 148
 02FF           ;        LCD_display('R');
 02FF CC0052            ldd #82
 0302 160000            jsr _LCD_display
 0305                   .dbline 149
 0305           ;        LCD_display('E');
 0305 CC0045            ldd #69
 0308 160000            jsr _LCD_display
 030B 203A              bra L85
 030D           L84:
 030D                   .dbline 152
 030D                   .dbline 153
 030D EC18              ldd -8,x
 030F CD000A            ldy #10
 0312 B7D6              exg x,y
 0314 1815              idivs
 0316 B7D6              exg x,y
 0318 6C1C              std -4,x
 031A                   .dbline 154
 031A EC18              ldd -8,x
 031C CD000A            ldy #10
 031F B7D6              exg x,y
 0321 1815              idivs
 0323 B7D6              exg x,y
 0325 6D18              sty -8,x
 0327                   .dbline 155
 0327 EC1C              ldd -4,x
 0329 C30030            addd #48
 032C 6C1C              std -4,x
 032E                   .dbline 156
 032E 19E1EA            leay -22,x
 0331 6DE1E8            sty -24,x
 0334 EC1E              ldd -2,x
 0336 59                lsld
 0337 E3E1E8            addd -24,x
 033A B7C6              xgdy
 033C EC1C              ldd -4,x
 033E 6C40              std 0,y
 0340                   .dbline 157
 0340 EC1E              ldd -2,x
 0342 830001            subd #1
 0345 6C1E              std -2,x
 0347                   .dbline 158
 0347           L85:
 0347                   .dbline 151
 0347           ; 
 0347           ;        while (index>=0)
 0347 EC1E              ldd -2,x
 0349 2CC2              bge L84
 034B                   .dbline 159
 034B           ;        {
 034B           ;                  remainder=holderTemp%10;
 034B           ;          holderTemp=holderTemp/10;
 034B           ;                  remainder=remainder+0x30;
 034B           ;                  arraycharstemp[index]=remainder;
 034B           ;                  index=index-1;
 034B           ;        } 
 034B           ;        LCD_display(' ');
 034B CC0020            ldd #32
 034E 160000            jsr _LCD_display
 0351                   .dbline 160
 0351           ;        for(index=0;index<2;index++)
 0351 CC0000            ldd #0
 0354 6C1E              std -2,x
 0356           L87:
 0356                   .dbline 161
 0356                   .dbline 162
 0356 19E1EA            leay -22,x
 0359 6DE1E8            sty -24,x
 035C EC1E              ldd -2,x
 035E 59                lsld
 035F E3E1E8            addd -24,x
 0362 B7C6              xgdy
 0364 ED40              ldy 0,y
 0366 6D1A              sty -6,x
 0368                   .dbline 164
 0368 EC1A              ldd -6,x
 036A 160000            jsr _LCD_display
 036D                   .dbline 165
 036D           L88:
 036D                   .dbline 160
 036D EC1E              ldd -2,x
 036F C30001            addd #1
 0372 6C1E              std -2,x
 0374                   .dbline 160
 0374 EC1E              ldd -2,x
 0376 8C0002            cpd #2
 0379 2DDB              blt L87
 037B                   .dbline 167
 037B           ;        {
 037B           ;               number=arraycharstemp[index];
 037B           ; 
 037B           ;               LCD_display(number);
 037B           ;        }
 037B           ;        
 037B           ;        LCD_display('C');
 037B CC0043            ldd #67
 037E 160000            jsr _LCD_display
 0381                   .dbline -2
 0381                   .dbline 168
 0381           ; }
 0381           L74:
 0381 B757              tfr x,s
 0383 30                pulx
 0384 1B82              leas 2,sp
 0386                   .dbline 0 ; func end
 0386 3D                rts
 0387                   .dbsym l arraycharstemp -22 A[4:2]I
 0387                   .dbsym l arraychars -18 A[8:4]I
 0387                   .dbsym l holderSpeed -10 I
 0387                   .dbsym l holderTemp -8 I
 0387                   .dbsym l number -6 I
 0387                   .dbsym l remainder -4 I
 0387                   .dbsym l index -2 I
 0387                   .dbsym l temp 6 I
 0387                   .dbsym l speed 2 I
 0387                   .dbend
 0387           L70:
 0387 4400              .byte 'D,0
 0389           L67:
 0389 4300              .byte 'C,0
 038B           L64:
 038B 4200              .byte 'B,0
 038D           L61:
 038D 4100              .byte 'A,0
 038F           L57:
 038F 4600              .byte 'F,0
 0391           L54:
 0391 3900              .byte 57,0
 0393           L51:
 0393 3600              .byte 54,0
 0395           L48:
 0395 3300              .byte 51,0
 0397           L44:
 0397 3000              .byte 48,0
 0399           L41:
 0399 3800              .byte 56,0
 039B           L38:
 039B 3500              .byte 53,0
 039D           L35:
 039D 3200              .byte 50,0
 039F           L31:
 039F 4500              .byte 'E,0
 03A1           L28:
 03A1 3700              .byte 55,0
 03A3           L25:
 03A3 3400              .byte 52,0
 03A5           L22:
 03A5 3100              .byte 49,0
